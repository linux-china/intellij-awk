package intellij_awk;

import org.jetbrains.annotations.NotNull;

public class AwkParserTestsGawk extends ParsingTestCaseBase {
  public AwkParserTestsGawk() {
    super("parser/gawk", "awk", new AwkParserDefinition());
  }

  @Override
  protected @NotNull String getTestName(boolean lowercaseFirstLetter) {
    return super.getTestName(lowercaseFirstLetter).toLowerCase();
  }

  /*
  ls src/test/testData/parser/gawk/ | awk '/\.awk/ { printf "public void test%s() { ensureOnlyParsingNoErrors(); }\n", (toupper(substr($1,1,1)) substr($1,2,length($1)-5)) }'
   */
  public void testAadelete1() { ensureOnlyParsingNoErrors(); }
  public void testAadelete2() { ensureOnlyParsingNoErrors(); }
  public void testAarray1() { ensureOnlyParsingNoErrors(); }
  public void testAasort() { ensureOnlyParsingNoErrors(); }
  public void testAasorti() { ensureOnlyParsingNoErrors(); }
  public void testAddcomma() { ensureOnlyParsingNoErrors(); }
  public void testAnchgsub() { ensureOnlyParsingNoErrors(); }
  public void testAnchor() { ensureOnlyParsingNoErrors(); }
  public void testApiterm() { ensureOnlyParsingNoErrors(); }
  public void testArgarray() { ensureOnlyParsingNoErrors(); }
  public void testArgtest() { ensureOnlyParsingNoErrors(); }
  public void testArrayind1() { ensureOnlyParsingNoErrors(); }
  public void testArrayind2() { ensureOnlyParsingNoErrors(); }
  public void testArrayind3() { ensureOnlyParsingNoErrors(); }
  public void testArrayparm() { ensureOnlyParsingNoErrors(); }
  public void testArrayprm2() { ensureOnlyParsingNoErrors(); }
  public void testArrayprm3() { ensureOnlyParsingNoErrors(); }
  public void testArrayref() { ensureOnlyParsingNoErrors(); }
  public void testArraysort2() { ensureOnlyParsingNoErrors(); }
  public void testArraysort() { ensureOnlyParsingNoErrors(); }
  public void testArraytype() { ensureOnlyParsingNoErrors(); }
  public void testArrdbg() { ensureOnlyParsingNoErrors(); }
  public void testArrymem1() { ensureOnlyParsingNoErrors(); }
  public void testArryref2() { ensureOnlyParsingNoErrors(); }
  public void testArryref3() { ensureOnlyParsingNoErrors(); }
  public void testArryref4() { ensureOnlyParsingNoErrors(); }
  public void testArryref5() { ensureOnlyParsingNoErrors(); }
  public void testArynasty() { ensureOnlyParsingNoErrors(); }
  public void testArynocls() { ensureOnlyParsingNoErrors(); }
  public void testAryprm1() { ensureOnlyParsingNoErrors(); }
  public void testAryprm2() { ensureOnlyParsingNoErrors(); }
  public void testAryprm3() { ensureOnlyParsingNoErrors(); }
  public void testAryprm4() { ensureOnlyParsingNoErrors(); }
  public void testAryprm5() { ensureOnlyParsingNoErrors(); }
  public void testAryprm6() { ensureOnlyParsingNoErrors(); }
  public void testAryprm7() { ensureOnlyParsingNoErrors(); }
  public void testAryprm8() { ensureOnlyParsingNoErrors(); }
  public void testAryprm9() { ensureOnlyParsingNoErrors(); }
  public void testArysubnm() { ensureOnlyParsingNoErrors(); }
  public void testAryunasgn() { ensureOnlyParsingNoErrors(); }
  public void testAsgext() { ensureOnlyParsingNoErrors(); }
  public void testAsort() { ensureOnlyParsingNoErrors(); }
  public void testAsorti() { ensureOnlyParsingNoErrors(); }
  public void testAssignnumfield2() { ensureOnlyParsingNoErrors(); }
  public void testAssignnumfield() { ensureOnlyParsingNoErrors(); }
  public void testBack89() { ensureOnlyParsingNoErrors(); }
  public void testBackbigs1() { ensureOnlyParsingNoErrors(); }
  public void testBackgsub() { ensureOnlyParsingNoErrors(); }
  public void testBacksmalls1() { ensureOnlyParsingNoErrors(); }
  public void testBacksmalls2() { ensureOnlyParsingNoErrors(); }
  public void testBackw() { ensureOnlyParsingNoErrors(); }
  public void testBadassign1() { ensureOnlyParsingNoErrors(); }
  public void testBadbuild() { ensureOnlyParsingNoErrors(); }
  public void testBeginfile1() { ensureOnlyParsingNoErrors(); }
  public void testCallparam() { ensureOnlyParsingNoErrors(); }
  public void testCharasbytes() { ensureOnlyParsingNoErrors(); }
  public void testChecknegtime() { ensureOnlyParsingNoErrors(); }
  public void testChildin() { ensureOnlyParsingNoErrors(); }
  public void testClobber() { ensureOnlyParsingNoErrors(); }
  public void testClos1way2() { ensureOnlyParsingNoErrors(); }
  public void testClos1way3() { ensureOnlyParsingNoErrors(); }
  public void testClos1way4() { ensureOnlyParsingNoErrors(); }
  public void testClos1way5() { ensureOnlyParsingNoErrors(); }
  public void testClos1way6() { ensureOnlyParsingNoErrors(); }
  public void testClos1way() { ensureOnlyParsingNoErrors(); }
  public void testClosebad() { ensureOnlyParsingNoErrors(); }
  public void testClsflnam() { ensureOnlyParsingNoErrors(); }
  public void testColonwarn() { ensureOnlyParsingNoErrors(); }
  public void testCompare2() { ensureOnlyParsingNoErrors(); }
  public void testCompare() { ensureOnlyParsingNoErrors(); }
  public void testConcat1() { ensureOnlyParsingNoErrors(); }
  public void testConcat2() { ensureOnlyParsingNoErrors(); }
  public void testConcat3() { ensureOnlyParsingNoErrors(); }
  public void testConcat4() { ensureOnlyParsingNoErrors(); }
  public void testConcat5() { ensureOnlyParsingNoErrors(); }
  public void testConvfmt() { ensureOnlyParsingNoErrors(); }
  // XXX not supported by posix
  //public void testCrlf() { ensureOnlyParsingNoErrors(); }
  public void testDatanonl() { ensureOnlyParsingNoErrors(); }
  public void testDbugeval2() { ensureOnlyParsingNoErrors(); }
  public void testDbugeval3() { ensureOnlyParsingNoErrors(); }
  public void testDbugtypedre1() { ensureOnlyParsingNoErrors(); }
  public void testDbugtypedre2() { ensureOnlyParsingNoErrors(); }
  public void testDefref() { ensureOnlyParsingNoErrors(); }
  public void testDelargv() { ensureOnlyParsingNoErrors(); }
  public void testDelarpm2() { ensureOnlyParsingNoErrors(); }
  public void testDelarprm() { ensureOnlyParsingNoErrors(); }
  public void testDelfunc() { ensureOnlyParsingNoErrors(); }
  public void testDelsub() { ensureOnlyParsingNoErrors(); }
  public void testDevfd1() { ensureOnlyParsingNoErrors(); }
  public void testDfacheck1() { ensureOnlyParsingNoErrors(); }
  public void testDfamb1() { ensureOnlyParsingNoErrors(); }
  public void testDfastress() { ensureOnlyParsingNoErrors(); }
  public void testDouble1() { ensureOnlyParsingNoErrors(); }
  public void testDouble2() { ensureOnlyParsingNoErrors(); }
  public void testDtdgport() { ensureOnlyParsingNoErrors(); }
  public void testDynlj() { ensureOnlyParsingNoErrors(); }
  public void testEofsplit() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testEofsrc1a() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testEofsrc1b() { ensureOnlyParsingNoErrors(); }
  public void testErrno() { ensureOnlyParsingNoErrors(); }
  public void testEscapebrace() { ensureOnlyParsingNoErrors(); }
  public void testExit2() { ensureOnlyParsingNoErrors(); }
  public void testExitval1() { ensureOnlyParsingNoErrors(); }
  public void testExitval2() { ensureOnlyParsingNoErrors(); }
  public void testExitval3() { ensureOnlyParsingNoErrors(); }
  public void testFcall_exit2() { ensureOnlyParsingNoErrors(); }
  public void testFcall_exit() { ensureOnlyParsingNoErrors(); }
  public void testFieldwdth() { ensureOnlyParsingNoErrors(); }
  public void testFilefuncs() { ensureOnlyParsingNoErrors(); }
  public void testFix_fmtspcl() { ensureOnlyParsingNoErrors(); }
  public void testFldchg() { ensureOnlyParsingNoErrors(); }
  public void testFldchgnf() { ensureOnlyParsingNoErrors(); }
  public void testFldterm() { ensureOnlyParsingNoErrors(); }
  public void testFmtspcl() { ensureOnlyParsingNoErrors(); }
  public void testFmttest() { ensureOnlyParsingNoErrors(); }
  public void testFnamedat() { ensureOnlyParsingNoErrors(); }
  public void testFnarray2() { ensureOnlyParsingNoErrors(); }
  public void testFnarray() { ensureOnlyParsingNoErrors(); }
  public void testFnarydel() { ensureOnlyParsingNoErrors(); }
  public void testFnaryscl() { ensureOnlyParsingNoErrors(); }
  public void testFnasgnm() { ensureOnlyParsingNoErrors(); }
  public void testFnmatch() { ensureOnlyParsingNoErrors(); }
  public void testFnmisc() { ensureOnlyParsingNoErrors(); }
  public void testFnparydl() { ensureOnlyParsingNoErrors(); }
  public void testForcenum() { ensureOnlyParsingNoErrors(); }
  public void testFordel() { ensureOnlyParsingNoErrors(); }
  public void testFork2() { ensureOnlyParsingNoErrors(); }
  public void testFork() { ensureOnlyParsingNoErrors(); }
  public void testForref() { ensureOnlyParsingNoErrors(); }
  public void testForsimp() { ensureOnlyParsingNoErrors(); }
  public void testFpat1() { ensureOnlyParsingNoErrors(); }
  public void testFpat2() { ensureOnlyParsingNoErrors(); }
  public void testFpat3() { ensureOnlyParsingNoErrors(); }
  public void testFpat4() { ensureOnlyParsingNoErrors(); }
  public void testFpat5() { ensureOnlyParsingNoErrors(); }
  public void testFpat6() { ensureOnlyParsingNoErrors(); }
  public void testFpat7() { ensureOnlyParsingNoErrors(); }
  public void testFpat8() { ensureOnlyParsingNoErrors(); }
  public void testFpatnull() { ensureOnlyParsingNoErrors(); }
  public void testFsbs() { ensureOnlyParsingNoErrors(); }
  public void testFscaret() { ensureOnlyParsingNoErrors(); }
  public void testFsfwfs() { ensureOnlyParsingNoErrors(); }
  public void testFsnul1() { ensureOnlyParsingNoErrors(); }
  public void testFsrs() { ensureOnlyParsingNoErrors(); }
  public void testFsspcoln() { ensureOnlyParsingNoErrors(); }
  public void testFstabplus() { ensureOnlyParsingNoErrors(); }
  public void testFts() { ensureOnlyParsingNoErrors(); }
  public void testFunctab1() { ensureOnlyParsingNoErrors(); }
  public void testFunctab2() { ensureOnlyParsingNoErrors(); }
  public void testFunctab3() { ensureOnlyParsingNoErrors(); }
  public void testFunctab4() { ensureOnlyParsingNoErrors(); }
  public void testFunlen() { ensureOnlyParsingNoErrors(); }
  public void testFunsemnl() { ensureOnlyParsingNoErrors(); }
  public void testFunsmnam() { ensureOnlyParsingNoErrors(); }
  public void testFunstack() { ensureOnlyParsingNoErrors(); }
  public void testFwtest2() { ensureOnlyParsingNoErrors(); }
  public void testFwtest3() { ensureOnlyParsingNoErrors(); }
  public void testFwtest4() { ensureOnlyParsingNoErrors(); }
  public void testFwtest5() { ensureOnlyParsingNoErrors(); }
  public void testFwtest6() { ensureOnlyParsingNoErrors(); }
  public void testFwtest7() { ensureOnlyParsingNoErrors(); }
  public void testFwtest8() { ensureOnlyParsingNoErrors(); }
  public void testFwtest() { ensureOnlyParsingNoErrors(); }
  public void testGenpot() { ensureOnlyParsingNoErrors(); }
  public void testGensub2() { ensureOnlyParsingNoErrors(); }
  public void testGensub3() { ensureOnlyParsingNoErrors(); }
  public void testGensub() { ensureOnlyParsingNoErrors(); }
  public void testGetfile() { ensureOnlyParsingNoErrors(); }
  public void testGetline2() { ensureOnlyParsingNoErrors(); }
  public void testGetline3() { ensureOnlyParsingNoErrors(); }
  public void testGetline4() { ensureOnlyParsingNoErrors(); }
  public void testGetline5() { ensureOnlyParsingNoErrors(); }
  public void testGetline() { ensureOnlyParsingNoErrors(); }
  public void testGetlnbuf() { ensureOnlyParsingNoErrors(); }
  public void testGetlndir() { ensureOnlyParsingNoErrors(); }
  public void testGetlnhd() { ensureOnlyParsingNoErrors(); }
  public void testGetnr2tb() { ensureOnlyParsingNoErrors(); }
  public void testGetnr2tm() { ensureOnlyParsingNoErrors(); }
  public void testGnuops2() { ensureOnlyParsingNoErrors(); }
  public void testGnuops3() { ensureOnlyParsingNoErrors(); }
  public void testGnureops() { ensureOnlyParsingNoErrors(); }
  public void testGsubasgn() { ensureOnlyParsingNoErrors(); }
  public void testGsubind() { ensureOnlyParsingNoErrors(); }
  public void testGsubtest() { ensureOnlyParsingNoErrors(); }
  public void testGsubtst2() { ensureOnlyParsingNoErrors(); }
  public void testGsubtst3() { ensureOnlyParsingNoErrors(); }
  public void testGsubtst4() { ensureOnlyParsingNoErrors(); }
  public void testGsubtst5() { ensureOnlyParsingNoErrors(); }
  public void testGsubtst6() { ensureOnlyParsingNoErrors(); }
  public void testGsubtst7() { ensureOnlyParsingNoErrors(); }
  public void testGsubtst8() { ensureOnlyParsingNoErrors(); }
  public void testGtlnbufv() { ensureOnlyParsingNoErrors(); }
  public void testHello() { ensureOnlyParsingNoErrors(); }
  public void testHex2() { ensureOnlyParsingNoErrors(); }
  public void testHex() { ensureOnlyParsingNoErrors(); }
  public void testHsprint() { ensureOnlyParsingNoErrors(); }
  public void testIcasefs() { ensureOnlyParsingNoErrors(); }
  public void testIcasers() { ensureOnlyParsingNoErrors(); }
  public void testId() { ensureOnlyParsingNoErrors(); }
  public void testIgncdym() { ensureOnlyParsingNoErrors(); }
  public void testIgncfs() { ensureOnlyParsingNoErrors(); }
  public void testIgnrcas2() { ensureOnlyParsingNoErrors(); }
  public void testIgnrcas3() { ensureOnlyParsingNoErrors(); }
  public void testIgnrcas4() { ensureOnlyParsingNoErrors(); }
  public void testIgnrcase() { ensureOnlyParsingNoErrors(); }
  public void testInchello() { ensureOnlyParsingNoErrors(); }
  public void testInclib() { ensureOnlyParsingNoErrors(); }
  public void testInclude() { ensureOnlyParsingNoErrors(); }
  public void testIndirectbuiltin() { ensureOnlyParsingNoErrors(); }
  public void testIndirectcall2() { ensureOnlyParsingNoErrors(); }
  public void testIndirectcall() { ensureOnlyParsingNoErrors(); }
  public void testInftest() { ensureOnlyParsingNoErrors(); }
  public void testInpref() { ensureOnlyParsingNoErrors(); }
  public void testInputred() { ensureOnlyParsingNoErrors(); }
  public void testIntarray() { ensureOnlyParsingNoErrors(); }
  public void testIntest() { ensureOnlyParsingNoErrors(); }
  public void testIntformat() { ensureOnlyParsingNoErrors(); }
  public void testIntprec() { ensureOnlyParsingNoErrors(); }
  public void testIobug1() { ensureOnlyParsingNoErrors(); }
  public void testIsarrayunset() { ensureOnlyParsingNoErrors(); }
  public void testJarebug() { ensureOnlyParsingNoErrors(); }
  public void testLc_num1() { ensureOnlyParsingNoErrors(); }
  public void testLeaddig() { ensureOnlyParsingNoErrors(); }
  public void testLeadnl() { ensureOnlyParsingNoErrors(); }
  public void testLint() { ensureOnlyParsingNoErrors(); }
  public void testLintexp() { ensureOnlyParsingNoErrors(); }
  public void testLintindex() { ensureOnlyParsingNoErrors(); }
  public void testLintint() { ensureOnlyParsingNoErrors(); }
  public void testLintlength() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testLintold() { ensureOnlyParsingNoErrors(); }
  public void testLintset() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testLintwarn() { ensureOnlyParsingNoErrors(); }
  public void testLitoct() { ensureOnlyParsingNoErrors(); }
  public void testLongsub() { ensureOnlyParsingNoErrors(); }
  public void testLongwrds() { ensureOnlyParsingNoErrors(); }
  public void testManglprm() { ensureOnlyParsingNoErrors(); }
  public void testManyfiles() { ensureOnlyParsingNoErrors(); }
  public void testMatch1() { ensureOnlyParsingNoErrors(); }
  public void testMatch2() { ensureOnlyParsingNoErrors(); }
  public void testMatch3() { ensureOnlyParsingNoErrors(); }
  public void testMath() { ensureOnlyParsingNoErrors(); }
  public void testMbfw1() { ensureOnlyParsingNoErrors(); }
  public void testMbprintf1() { ensureOnlyParsingNoErrors(); }
  public void testMbprintf2() { ensureOnlyParsingNoErrors(); }
  public void testMbprintf3() { ensureOnlyParsingNoErrors(); }
  public void testMbprintf4() { ensureOnlyParsingNoErrors(); }
  public void testMbprintf5() { ensureOnlyParsingNoErrors(); }
  public void testMbstr1() { ensureOnlyParsingNoErrors(); }
  public void testMbstr2() { ensureOnlyParsingNoErrors(); }
  public void testMembug1() { ensureOnlyParsingNoErrors(); }
  public void testMemleak() { ensureOnlyParsingNoErrors(); }
  public void testMessages() { ensureOnlyParsingNoErrors(); }
  public void testMinusstr() { ensureOnlyParsingNoErrors(); }
  public void testMktime() { ensureOnlyParsingNoErrors(); }
  public void testMmap8k() { ensureOnlyParsingNoErrors(); }
  public void testMpfranswer42() { ensureOnlyParsingNoErrors(); }
  public void testMpfrbigint2() { ensureOnlyParsingNoErrors(); }
  public void testMpfrbigint() { ensureOnlyParsingNoErrors(); }
  public void testMpfrexprange() { ensureOnlyParsingNoErrors(); }
  public void testMpfrfield() { ensureOnlyParsingNoErrors(); }
  public void testMpfrieee() { ensureOnlyParsingNoErrors(); }
  public void testMpfrmemok1() { ensureOnlyParsingNoErrors(); }
  public void testMpfrnegzero() { ensureOnlyParsingNoErrors(); }
  public void testMpfrnr() { ensureOnlyParsingNoErrors(); }
  public void testMpfrrem() { ensureOnlyParsingNoErrors(); }
  public void testMpfrrnd() { ensureOnlyParsingNoErrors(); }
  public void testMpfrrndeval() { ensureOnlyParsingNoErrors(); }
  public void testMpfrsort() { ensureOnlyParsingNoErrors(); }
  public void testMpfrsqrt() { ensureOnlyParsingNoErrors(); }
  public void testMpfrstrtonum() { ensureOnlyParsingNoErrors(); }
  public void testMpgforcenum() { ensureOnlyParsingNoErrors(); }
  public void testMtchi18n() { ensureOnlyParsingNoErrors(); }
  public void testMuldimposix() { ensureOnlyParsingNoErrors(); }
  public void testNasty2() { ensureOnlyParsingNoErrors(); }
  public void testNasty() { ensureOnlyParsingNoErrors(); }
  public void testNastyparm() { ensureOnlyParsingNoErrors(); }
  public void testNegexp() { ensureOnlyParsingNoErrors(); }
  public void testNegrange() { ensureOnlyParsingNoErrors(); }
  public void testNegtime() { ensureOnlyParsingNoErrors(); }
  public void testNested() { ensureOnlyParsingNoErrors(); }
  public void testNfldstr() { ensureOnlyParsingNoErrors(); }
  public void testNfloop() { ensureOnlyParsingNoErrors(); }
  public void testNfneg() { ensureOnlyParsingNoErrors(); }
  public void testNfset() { ensureOnlyParsingNoErrors(); }
  public void testNlfldsep() { ensureOnlyParsingNoErrors(); }
  public void testNlinstr() { ensureOnlyParsingNoErrors(); }
  public void testNlstrina() { ensureOnlyParsingNoErrors(); }
  public void testNlstringtest() { ensureOnlyParsingNoErrors(); }
  public void testNoeffect() { ensureOnlyParsingNoErrors(); }
  public void testNofmtch() { ensureOnlyParsingNoErrors(); }
  public void testNoloop1() { ensureOnlyParsingNoErrors(); }
  public void testNoloop2() { ensureOnlyParsingNoErrors(); }
  public void testNondec2() { ensureOnlyParsingNoErrors(); }
  public void testNondec() { ensureOnlyParsingNoErrors(); }
  public void testNonfatal1() { ensureOnlyParsingNoErrors(); }
  public void testNonfatal2() { ensureOnlyParsingNoErrors(); }
  public void testNonfatal3() { ensureOnlyParsingNoErrors(); }
  public void testNonl() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testNoparms() { ensureOnlyParsingNoErrors(); }
  public void testNsawk1() { ensureOnlyParsingNoErrors(); }
  public void testNsawk2() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testNsbad() { ensureOnlyParsingNoErrors(); }
  public void testNsforloop() { ensureOnlyParsingNoErrors(); }
  public void testNsfuncrecurse() { ensureOnlyParsingNoErrors(); }
  public void testNsindirect1() { ensureOnlyParsingNoErrors(); }
  // TODO see https://github.com/xonixx/intellij-awk/issues/70
  //public void testNsindirect2() { ensureOnlyParsingNoErrors(); }
  public void testNsprof1() { ensureOnlyParsingNoErrors(); }
  public void testNsprof2() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testNulinsrc() { ensureOnlyParsingNoErrors(); }
  public void testNulrsend() { ensureOnlyParsingNoErrors(); }
  public void testNumindex() { ensureOnlyParsingNoErrors(); }
  public void testNumrange() { ensureOnlyParsingNoErrors(); }
  public void testNumstr1() { ensureOnlyParsingNoErrors(); }
  public void testNumsubstr() { ensureOnlyParsingNoErrors(); }
  public void testOctsub() { ensureOnlyParsingNoErrors(); }
  public void testOfmta() { ensureOnlyParsingNoErrors(); }
  public void testOfmt() { ensureOnlyParsingNoErrors(); }
  public void testOfmtbig() { ensureOnlyParsingNoErrors(); }
  public void testOfmtfidl() { ensureOnlyParsingNoErrors(); }
  public void testOfmts() { ensureOnlyParsingNoErrors(); }
  public void testOfmtstrnum() { ensureOnlyParsingNoErrors(); }
  public void testOfs1() { ensureOnlyParsingNoErrors(); }
  public void testOnlynl() { ensureOnlyParsingNoErrors(); }
  public void testOpasnidx() { ensureOnlyParsingNoErrors(); }
  public void testOpasnslf() { ensureOnlyParsingNoErrors(); }
  public void testOrdchr() { ensureOnlyParsingNoErrors(); }
  public void testParamasfunc1() { ensureOnlyParsingNoErrors(); }
  public void testParamasfunc2() { ensureOnlyParsingNoErrors(); }
  public void testParamdup() { ensureOnlyParsingNoErrors(); }
  public void testParamres() { ensureOnlyParsingNoErrors(); }
  public void testParamtyp() { ensureOnlyParsingNoErrors(); }
  public void testParamuninitglobal() { ensureOnlyParsingNoErrors(); }
  public void testParse1() { ensureOnlyParsingNoErrors(); }
  public void testParsefld() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testParseme() { ensureOnlyParsingNoErrors(); }
  public void testPatsplit() { ensureOnlyParsingNoErrors(); }
  public void testPcntplus() { ensureOnlyParsingNoErrors(); }
  public void testPid() { ensureOnlyParsingNoErrors(); }
  public void testPipeio1() { ensureOnlyParsingNoErrors(); }
  public void testPipeio2() { ensureOnlyParsingNoErrors(); }
  public void testPosix2008sub() { ensureOnlyParsingNoErrors(); }
  public void testPosix() { ensureOnlyParsingNoErrors(); }
  public void testPoundbang() { ensureOnlyParsingNoErrors(); }
  public void testPrdupval() { ensureOnlyParsingNoErrors(); }
  public void testPrec() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testPrintf0() { ensureOnlyParsingNoErrors(); }
  public void testPrintf1() { ensureOnlyParsingNoErrors(); }
  public void testPrintfbad1() { ensureOnlyParsingNoErrors(); }
  public void testPrintfbad2() { ensureOnlyParsingNoErrors(); }
  public void testPrintfbad3() { ensureOnlyParsingNoErrors(); }
  public void testPrintfbad4() { ensureOnlyParsingNoErrors(); }
  public void testPrintfchar() { ensureOnlyParsingNoErrors(); }
  public void testPrintfloat() { ensureOnlyParsingNoErrors(); }
  public void testPrinthuge() { ensureOnlyParsingNoErrors(); }
  public void testPrintlang() { ensureOnlyParsingNoErrors(); }
  public void testPrmarscl() { ensureOnlyParsingNoErrors(); }
  public void testPrmreuse() { ensureOnlyParsingNoErrors(); }
  public void testProcinfs() { ensureOnlyParsingNoErrors(); }
  public void testProfile0() { ensureOnlyParsingNoErrors(); }
  public void testProfile10() { ensureOnlyParsingNoErrors(); }
  public void testProfile11() { ensureOnlyParsingNoErrors(); }
  public void testProfile12() { ensureOnlyParsingNoErrors(); }
  public void testProfile13() { ensureOnlyParsingNoErrors(); }
  public void testProfile3() { ensureOnlyParsingNoErrors(); }
  public void testProfile4() { ensureOnlyParsingNoErrors(); }
  public void testProfile5() { ensureOnlyParsingNoErrors(); }
  public void testProfile6() { ensureOnlyParsingNoErrors(); }
  public void testProfile7() { ensureOnlyParsingNoErrors(); }
  public void testProfile8() { ensureOnlyParsingNoErrors(); }
  public void testProfile9() { ensureOnlyParsingNoErrors(); }
  public void testPrt1eval() { ensureOnlyParsingNoErrors(); }
  public void testPrtoeval() { ensureOnlyParsingNoErrors(); }
  public void testPty1() { ensureOnlyParsingNoErrors(); }
  public void testPty2() { ensureOnlyParsingNoErrors(); }
  public void testRand() { ensureOnlyParsingNoErrors(); }
  public void testRange1() { ensureOnlyParsingNoErrors(); }
  public void testRange2() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testReadbuf() { ensureOnlyParsingNoErrors(); }
  public void testReaddir0() { ensureOnlyParsingNoErrors(); }
  public void testReaddir() { ensureOnlyParsingNoErrors(); }
  public void testReaddir_retest() { ensureOnlyParsingNoErrors(); }
  public void testReadfile2() { ensureOnlyParsingNoErrors(); }
  public void testRebrackloc() { ensureOnlyParsingNoErrors(); }
  public void testRebt8b1() { ensureOnlyParsingNoErrors(); }
  public void testRebt8b2() { ensureOnlyParsingNoErrors(); }
  public void testRebuf() { ensureOnlyParsingNoErrors(); }
  public void testRebuild() { ensureOnlyParsingNoErrors(); }
  public void testRedfilnm() { ensureOnlyParsingNoErrors(); }
  public void testRegeq() { ensureOnlyParsingNoErrors(); }
  public void testRegexpbrack2() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testRegexpbrack() { ensureOnlyParsingNoErrors(); }
  public void testRegexprange() { ensureOnlyParsingNoErrors(); }
  public void testReginttrad() { ensureOnlyParsingNoErrors(); }
  public void testRegnul1() { ensureOnlyParsingNoErrors(); }
  public void testRegnul2() { ensureOnlyParsingNoErrors(); }
  public void testRegrange() { ensureOnlyParsingNoErrors(); }
  public void testRegx8bit() { ensureOnlyParsingNoErrors(); }
  public void testReindops() { ensureOnlyParsingNoErrors(); }
  public void testReint2() { ensureOnlyParsingNoErrors(); }
  public void testReint() { ensureOnlyParsingNoErrors(); }
  public void testReparse() { ensureOnlyParsingNoErrors(); }
  public void testResplit() { ensureOnlyParsingNoErrors(); }
  public void testRevout() { ensureOnlyParsingNoErrors(); }
  public void testRevtwoway() { ensureOnlyParsingNoErrors(); }
  public void testRri1() { ensureOnlyParsingNoErrors(); }
  public void testRs() { ensureOnlyParsingNoErrors(); }
  public void testRscompat() { ensureOnlyParsingNoErrors(); }
  public void testRsgetline() { ensureOnlyParsingNoErrors(); }
  public void testRsnul1nl() { ensureOnlyParsingNoErrors(); }
  public void testRsnulw() { ensureOnlyParsingNoErrors(); }
  public void testRsstart1() { ensureOnlyParsingNoErrors(); }
  public void testRsstart2() { ensureOnlyParsingNoErrors(); }
  public void testRstest1() { ensureOnlyParsingNoErrors(); }
  public void testRstest2() { ensureOnlyParsingNoErrors(); }
  public void testRstest3() { ensureOnlyParsingNoErrors(); }
  public void testRstest4() { ensureOnlyParsingNoErrors(); }
  public void testRstest5() { ensureOnlyParsingNoErrors(); }
  public void testRstest6() { ensureOnlyParsingNoErrors(); }
  public void testRswhite() { ensureOnlyParsingNoErrors(); }
  public void testRwarray() { ensureOnlyParsingNoErrors(); }
  public void testSandbox1() { ensureOnlyParsingNoErrors(); }
  public void testScalar() { ensureOnlyParsingNoErrors(); }
  public void testSclforin() { ensureOnlyParsingNoErrors(); }
  public void testSclifin() { ensureOnlyParsingNoErrors(); }
  public void testSetrec0() { ensureOnlyParsingNoErrors(); }
  public void testSetrec1() { ensureOnlyParsingNoErrors(); }
  public void testShadow() { ensureOnlyParsingNoErrors(); }
  // TODO see https://github.com/xonixx/intellij-awk/issues/70
  //public void testShadowbuiltin() { ensureOnlyParsingNoErrors(); }
  public void testSigpipe1() { ensureOnlyParsingNoErrors(); }
  public void testSort1() { ensureOnlyParsingNoErrors(); }
  public void testSortempty() { ensureOnlyParsingNoErrors(); }
  public void testSortfor2() { ensureOnlyParsingNoErrors(); }
  public void testSortfor() { ensureOnlyParsingNoErrors(); }
  public void testSortglos() { ensureOnlyParsingNoErrors(); }
  public void testSortu() { ensureOnlyParsingNoErrors(); }
  public void testSpacere() { ensureOnlyParsingNoErrors(); }
  public void testSplit_after_fpat() { ensureOnlyParsingNoErrors(); }
  public void testSplitarg4() { ensureOnlyParsingNoErrors(); }
  public void testSplitargv() { ensureOnlyParsingNoErrors(); }
  public void testSplitarr() { ensureOnlyParsingNoErrors(); }
  public void testSplitdef() { ensureOnlyParsingNoErrors(); }
  public void testSplitvar() { ensureOnlyParsingNoErrors(); }
  public void testSplitwht() { ensureOnlyParsingNoErrors(); }
  public void testSprintfc() { ensureOnlyParsingNoErrors(); }
  public void testStatus_close() { ensureOnlyParsingNoErrors(); }
  public void testStrcat1() { ensureOnlyParsingNoErrors(); }
  public void testStrftfld() { ensureOnlyParsingNoErrors(); }
  public void testStrftime() { ensureOnlyParsingNoErrors(); }
  public void testStrftlng() { ensureOnlyParsingNoErrors(); }
  public void testStrnum1() { ensureOnlyParsingNoErrors(); }
  public void testStrnum2() { ensureOnlyParsingNoErrors(); }
  public void testStrtod() { ensureOnlyParsingNoErrors(); }
  public void testStrtonum1() { ensureOnlyParsingNoErrors(); }
  public void testStrtonum() { ensureOnlyParsingNoErrors(); }
  public void testStupid1() { ensureOnlyParsingNoErrors(); }
  public void testStupid2() { ensureOnlyParsingNoErrors(); }
  public void testStupid3() { ensureOnlyParsingNoErrors(); }
  public void testStupid4() { ensureOnlyParsingNoErrors(); }
  public void testSubamp() { ensureOnlyParsingNoErrors(); }
  public void testSubback() { ensureOnlyParsingNoErrors(); }
  public void testSubi18n() { ensureOnlyParsingNoErrors(); }
  public void testSubsepnm() { ensureOnlyParsingNoErrors(); }
  public void testSubslash() { ensureOnlyParsingNoErrors(); }
  public void testSubstr() { ensureOnlyParsingNoErrors(); }
  public void testSwaplns() { ensureOnlyParsingNoErrors(); }
  public void testSwitch2() { ensureOnlyParsingNoErrors(); }
  public void testSymtab10() { ensureOnlyParsingNoErrors(); }
  public void testSymtab11() { ensureOnlyParsingNoErrors(); }
  public void testSymtab1() { ensureOnlyParsingNoErrors(); }
  public void testSymtab2() { ensureOnlyParsingNoErrors(); }
  public void testSymtab3() { ensureOnlyParsingNoErrors(); }
  public void testSymtab4() { ensureOnlyParsingNoErrors(); }
  public void testSymtab5() { ensureOnlyParsingNoErrors(); }
  public void testSymtab6() { ensureOnlyParsingNoErrors(); }
  public void testSymtab7() { ensureOnlyParsingNoErrors(); }
  public void testSymtab8() { ensureOnlyParsingNoErrors(); }
  public void testSymtab9() { ensureOnlyParsingNoErrors(); }
//  public void testSynerr1() { ensureOnlyParsingNoErrors(); }
//  public void testSynerr2() { ensureOnlyParsingNoErrors(); }
//  public void testSynerr3() { ensureOnlyParsingNoErrors(); }
  public void testTailrecurse() { ensureOnlyParsingNoErrors(); }
  public void testTime() { ensureOnlyParsingNoErrors(); }
  public void testTimeout() { ensureOnlyParsingNoErrors(); }
  public void testTradanch() { ensureOnlyParsingNoErrors(); }
  public void testTrailbs() { ensureOnlyParsingNoErrors(); }
  public void testTweakfld() { ensureOnlyParsingNoErrors(); }
  public void testTypedregex1() { ensureOnlyParsingNoErrors(); }
  public void testTypedregex2() { ensureOnlyParsingNoErrors(); }
  public void testTypedregex3() { ensureOnlyParsingNoErrors(); }
  public void testTypedregex4() { ensureOnlyParsingNoErrors(); }
  public void testTypedregex5() { ensureOnlyParsingNoErrors(); }
  public void testTypedregex6() { ensureOnlyParsingNoErrors(); }
  public void testTypeof1() { ensureOnlyParsingNoErrors(); }
  public void testTypeof2() { ensureOnlyParsingNoErrors(); }
  public void testTypeof3() { ensureOnlyParsingNoErrors(); }
  public void testTypeof4() { ensureOnlyParsingNoErrors(); }
  public void testTypeof5() { ensureOnlyParsingNoErrors(); }
  public void testUninit2() { ensureOnlyParsingNoErrors(); }
  public void testUninit3() { ensureOnlyParsingNoErrors(); }
  public void testUninit4() { ensureOnlyParsingNoErrors(); }
  public void testUninit5() { ensureOnlyParsingNoErrors(); }
  public void testUninitialized() { ensureOnlyParsingNoErrors(); }
  // XXX not a bug
  // public void testUnterm() { ensureOnlyParsingNoErrors(); }
  public void testUparrfs() { ensureOnlyParsingNoErrors(); }
  public void testUplus() { ensureOnlyParsingNoErrors(); }
  public void testValgrind() { ensureOnlyParsingNoErrors(); }
  public void testWatchpoint1() { ensureOnlyParsingNoErrors(); }
  public void testWideidx2() { ensureOnlyParsingNoErrors(); }
  public void testWideidx() { ensureOnlyParsingNoErrors(); }
  public void testWidesub2() { ensureOnlyParsingNoErrors(); }
  public void testWidesub3() { ensureOnlyParsingNoErrors(); }
  public void testWidesub4() { ensureOnlyParsingNoErrors(); }
  public void testWidesub() { ensureOnlyParsingNoErrors(); }
  public void testWjposer1() { ensureOnlyParsingNoErrors(); }
  public void testXref() { ensureOnlyParsingNoErrors(); }
  public void testZero2() { ensureOnlyParsingNoErrors(); }
  public void testZeroe0() { ensureOnlyParsingNoErrors(); }
  public void testZeroflag() { ensureOnlyParsingNoErrors(); }
}
